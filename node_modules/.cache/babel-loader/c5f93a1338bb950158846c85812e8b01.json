{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/promethium-coding-challenge/src/main/WeatherTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, withStyles, Box, Container, Typography, Grid } from '@material-ui/core';\nimport WeatherTableRow from '../components/WeatherTableRow';\nimport WeatherTableHeader from '../components/WeatherTableHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherTable = props => {\n  _s();\n\n  const classes = props.classes;\n  const ids = [2172797, 1705545, 1796228, 1006984, 1796247];\n  const [listOfCityNames, setListOfCityNames] = useState([]);\n  const listOfTemperatures = [];\n  const listOfMinTemperatures = [];\n  const listOfUpdatedAt = [];\n  const [weatherData, setWeatherData] = useState({\n    cityNames: []\n  });\n\n  const fetchData = () => {\n    ids.map(id => fetch(`https://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`).then(response => response.json()).then(data => {\n      console.log(listOfCityNames);\n      setListOfCityNames(listOfCityNames.concat(data.name));\n    }));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.weatherTableContainer,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(WeatherTableHeader, {\n        cityName: \"City Name\",\n        temperature: \"Temperature\",\n        minTemperature: \"Min Temperature\",\n        updatedAt: \"Updated At\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), listOfCityNames]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherTable, \"10RET1omq+JSIcg5/H9FwdDfmUM=\");\n\n_c = WeatherTable;\n\nconst useStyles = theme => createStyles({\n  weatherTableContainer: {\n    width: '100%',\n    height: '100%',\n    margin: '0px',\n    padding: '0px',\n    overflowX: 'hidden'\n  }\n});\n\nexport default withStyles(useStyles)(WeatherTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherTable\");","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/promethium-coding-challenge/src/main/WeatherTable.js"],"names":["React","useEffect","useState","createStyles","withStyles","Box","Container","Typography","Grid","WeatherTableRow","WeatherTableHeader","WeatherTable","props","classes","ids","listOfCityNames","setListOfCityNames","listOfTemperatures","listOfMinTemperatures","listOfUpdatedAt","weatherData","setWeatherData","cityNames","fetchData","map","id","fetch","process","env","REACT_APP_WEATHER_API_KEY","then","response","json","data","console","log","concat","name","weatherTableContainer","useStyles","theme","width","height","margin","padding","overflowX"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACIC,YADJ,EAEIC,UAFJ,EAGIC,GAHJ,EAIIC,SAJJ,EAKIC,UALJ,EAMIC,IANJ,QAOO,mBAPP;AAQA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAMC,GAAG,GAAG,CACR,OADQ,EAER,OAFQ,EAGR,OAHQ,EAIR,OAJQ,EAKR,OALQ,CAAZ;AAOA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMe,kBAAkB,GAAG,EAA3B;AACA,QAAMC,qBAAqB,GAAG,EAA9B;AACA,QAAMC,eAAe,GAAG,EAAxB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC;AAC3CoB,IAAAA,SAAS,EAAE;AADgC,GAAD,CAA9C;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACpBT,IAAAA,GAAG,CAACU,GAAJ,CAASC,EAAD,IACJC,KAAK,CAAE,sDAAqDD,EAAG,UAASE,OAAO,CAACC,GAAR,CAAYC,yBAA0B,EAAzG,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYpB,eAAZ;AACAC,MAAAA,kBAAkB,CAACD,eAAe,CAACqB,MAAhB,CAAuBH,IAAI,CAACI,IAA5B,CAAD,CAAlB;AACH,KALD,CADJ;AAQH,GATD;;AAUApC,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACyB,qBAAxB;AAAA,2BACI,QAAC,SAAD;AAAA,8BACI,QAAC,kBAAD;AACG,QAAA,QAAQ,EAAG,WADd;AAEG,QAAA,WAAW,EAAG,aAFjB;AAGG,QAAA,cAAc,EAAG,iBAHpB;AAIG,QAAA,SAAS,EAAI;AAJhB;AAAA;AAAA;AAAA;AAAA,cADJ,EAOKvB,eAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA5CD;;GAAMJ,Y;;KAAAA,Y;;AA8CN,MAAM4B,SAAS,GAAIC,KAAD,IAAWrC,YAAY,CAAC;AACtCmC,EAAAA,qBAAqB,EAAE;AACnBG,IAAAA,KAAK,EAAE,MADY;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBC,IAAAA,MAAM,EAAE,KAHW;AAInBC,IAAAA,OAAO,EAAE,KAJU;AAKnBC,IAAAA,SAAS,EAAE;AALQ;AADe,CAAD,CAAzC;;AAUA,eAAezC,UAAU,CAACmC,SAAD,CAAV,CAAsB5B,YAAtB,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { \n    createStyles, \n    withStyles,\n    Box,\n    Container,\n    Typography,\n    Grid,\n} from '@material-ui/core';\nimport WeatherTableRow from '../components/WeatherTableRow';\nimport WeatherTableHeader from '../components/WeatherTableHeader';\n\nconst WeatherTable = (props) => {\n    const classes = props.classes;\n    const ids = [\n        2172797,\n        1705545,\n        1796228,\n        1006984,\n        1796247\n    ]\n    const [listOfCityNames, setListOfCityNames] = useState([]);\n    const listOfTemperatures = [];\n    const listOfMinTemperatures = [];\n    const listOfUpdatedAt = [];\n\n    const [weatherData, setWeatherData] = useState({\n        cityNames: [],\n    })\n\n    const fetchData = () => {\n        ids.map((id) => \n            fetch(`https://api.openweathermap.org/data/2.5/weather?id=${id}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(listOfCityNames)\n                setListOfCityNames(listOfCityNames.concat(data.name));\n            })\n        )\n    }\n    useEffect(() => {\n        fetchData();\n    }, []);\n    return (\n        <Box className={classes.weatherTableContainer}>\n            <Container>\n                <WeatherTableHeader\n                   cityName = \"City Name\"\n                   temperature = \"Temperature\"\n                   minTemperature = \"Min Temperature\"\n                   updatedAt =  \"Updated At\"\n                />\n                {listOfCityNames}\n            </Container>\n        </Box>\n    );\n}\n\nconst useStyles = (theme) => createStyles({\n    weatherTableContainer: {\n        width: '100%',\n        height: '100%',\n        margin: '0px',\n        padding: '0px',\n        overflowX: 'hidden',\n    },\n});\n\nexport default withStyles(useStyles)(WeatherTable);"]},"metadata":{},"sourceType":"module"}