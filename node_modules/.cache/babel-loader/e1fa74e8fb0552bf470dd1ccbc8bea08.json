{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/promethium-coding-challenge/src/main/ReloadButton.js\";\nimport React from 'react';\nimport { createStyles, withStyles, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReloadButton = props => {\n  const classes = props.classes;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    onClick: () => window.location.reload(),\n    children: \"Reload\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 8\n  }, this);\n};\n\n_c = ReloadButton;\n\nconst useStyles = theme => createStyles({\n  button: {\n    backgroundColor: theme.palette.button.main\n  }\n});\n\nexport default withStyles(useStyles)(ReloadButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"ReloadButton\");","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/promethium-coding-challenge/src/main/ReloadButton.js"],"names":["React","createStyles","withStyles","Button","ReloadButton","props","classes","button","window","location","reload","useStyles","theme","backgroundColor","palette","main"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,YADJ,EAEIC,UAFJ,EAGIC,MAHJ,QAIO,mBAJP;;;AAMA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,sBACG,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAEA,OAAO,CAACC,MAA3B;AAAmC,IAAA,OAAO,EAAC,WAA3C;AAAuD,IAAA,OAAO,EAAE,MAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAGH,CALD;;KAAMN,Y;;AAON,MAAMO,SAAS,GAAIC,KAAD,IAAWX,YAAY,CAAC;AACtCM,EAAAA,MAAM,EAAE;AACJM,IAAAA,eAAe,EAAED,KAAK,CAACE,OAAN,CAAcP,MAAd,CAAqBQ;AADlC;AAD8B,CAAD,CAAzC;;AAMA,eAAeb,UAAU,CAACS,SAAD,CAAV,CAAsBP,YAAtB,CAAf","sourcesContent":["import React from 'react';\nimport {\n    createStyles,\n    withStyles,\n    Button,\n} from '@material-ui/core';\n\nconst ReloadButton = (props) => {\n    const classes = props.classes;\n    return (\n       <Button className={classes.button} variant=\"contained\" onClick={() => window.location.reload()}>Reload</Button>\n    );\n}\n\nconst useStyles = (theme) => createStyles({\n    button: {\n        backgroundColor: theme.palette.button.main,\n    },\n})\n\nexport default withStyles(useStyles)(ReloadButton);"]},"metadata":{},"sourceType":"module"}